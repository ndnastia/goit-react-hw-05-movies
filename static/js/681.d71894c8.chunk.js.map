{"version":3,"file":"static/js/681.d71894c8.chunk.js","mappings":"yNAqDA,UAjDgB,WAEZ,OAA8BA,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,QAuBP,OApBAE,EAAAA,EAAAA,YAAU,WACN,GAAKF,EAAL,CAEF,IAAMG,EAAc,mCAAG,oGAEnBN,GAAa,GAFM,UAGQO,EAAAA,EAAAA,IAAgBJ,GAHxB,OAGbK,EAHa,OAKnBV,EAAWU,GALQ,gDAOnBN,EAAS,KAAMO,SAPI,yBASnBT,GAAa,GATM,4EAAH,qDAapBM,GAfsB,CAgBvB,GAAE,CAACH,KAIA,2BACkB,OAAZN,IAAoB,wBAAKA,EAAQa,KAAI,YAA4B,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,GAC1D,OACI,4BAEA,qCAAaF,MACb,wBAAKC,MAHKC,EAQjB,MAEAd,IAAa,uCACbE,IAAS,uBAAIA,MAIrB,C,+LCjDKa,EAAW,gCACXC,EAAU,mCAEHC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,wCAAqDC,IAD9C,uBACrBG,EADqB,EACrBA,KADqB,kBAErBA,EAAKC,SAFgB,2CAAH,qDAMhBC,EAAY,mCAAG,WAAMjB,GAAN,yFACDc,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDX,EADC,oBACkBY,EADlB,oBADC,uBAChBG,EADgB,EAChBA,KADgB,kBAIjBA,GAJiB,2CAAH,sDAQVG,EAAY,mCAAG,WAAMlB,GAAN,yFACHc,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDX,EADC,4BAC0BY,EAD1B,oBADG,uBAClBG,EADkB,EAClBA,KADkB,kBAKnBA,EAAKI,MALc,2CAAH,sDAOZf,EAAe,mCAAG,WAAMJ,GAAN,yFACNc,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDX,EADC,4BAC0BY,EAD1B,oBADM,uBACrBG,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,sDASfI,EAAe,mCAAG,WAAMC,GAAN,yFACNP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,kBAC+BS,EAD/B,+CADM,uBACrBN,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,qD","sources":["components/Reviews.jsx","helpers/api.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getReviewsMovie } from \"helpers/api\";\n\nconst Reviews = () => {\n\n    const [reviews, setReviews] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const {movieId} = useParams();\n\n\n    useEffect(() => {\n        if (!movieId) return;\n  \n      const fetchMovieCast = async () => {\n        try {\n          setIsLoading(true);\n          const movieReviews = await getReviewsMovie(movieId);\n  \n          setReviews(movieReviews);\n        } catch (error) {\n          setError(error.message);\n        } finally {\n          setIsLoading(false);\n        }\n      };\n  \n      fetchMovieCast();\n    }, [movieId])\n\n\n    return(\n        <div>\n             {reviews !== null && <ul>{reviews.map(({author, content, id}) => {\n            return(\n                <div key={id}>\n\n                <h3>Author: {author}</h3>\n                <h3>{content}</h3> \n\n                </div>\n                \n            )\n        })}</ul>}\n\n        {isLoading && <div>Loading..</div>}\n        {error && <p>{error}</p>}\n        </div>\n       \n    )\n}\n\nexport default Reviews;","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '9000566cda5073c05dca2ec073eeeb0d';\n\nexport const fetchTrendingNow = async () => {\n    const {data} = await axios.get(`${BASE_URL}/trending/movie/week?api_key=${API_KEY}`);\n    return data.results;\n};\n\n\nexport const getMovieById = async movieId => {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n  \n    return data;\n  };\n\n\n  export const getCastMovie = async movieId => {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n  \n    return data.cast;\n  };\n  export const getReviewsMovie = async movieId => {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n  \n    return data.results;\n  };\n\n\n  export const getMovieByQuery = async query => {\n    const { data } = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n    );\n  \n    return data.results;\n  };"],"names":["useState","reviews","setReviews","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","fetchMovieCast","getReviewsMovie","movieReviews","message","map","author","content","id","BASE_URL","API_KEY","fetchTrendingNow","axios","data","results","getMovieById","getCastMovie","cast","getMovieByQuery","query"],"sourceRoot":""}