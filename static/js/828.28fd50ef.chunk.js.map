{"version":3,"file":"static/js/828.28fd50ef.chunk.js","mappings":"2JA2BA,IA1BkB,SAAC,GAAc,IAAbA,EAAY,EAAZA,OAEhB,OACI,2BACK,wBACJA,EAAOC,KAAI,SAACC,GAAW,OACtB,0BACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,UACF,2BACE,gBAAKC,IAAK,mCAAqCH,EAAMI,YAAaC,IAAKL,EAAMM,SAC7E,uBAAIN,EAAMM,cAJFN,EAAME,GAUhB,OAQT,C,+LCvBKK,EAAW,gCACXC,EAAU,mCAEHC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,wCAAqDC,IAD9C,uBACrBG,EADqB,EACrBA,KADqB,kBAErBA,EAAKC,SAFgB,2CAAH,qDAMhBC,EAAY,mCAAG,WAAMC,GAAN,yFACDJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDO,EADC,oBACkBN,EADlB,oBADC,uBAChBG,EADgB,EAChBA,KADgB,kBAIjBA,GAJiB,2CAAH,sDAQVI,EAAY,mCAAG,WAAMD,GAAN,yFACHJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDO,EADC,4BAC0BN,EAD1B,oBADG,uBAClBG,EADkB,EAClBA,KADkB,kBAKnBA,EAAKK,MALc,2CAAH,sDAOZC,EAAe,mCAAG,WAAMH,GAAN,yFACNJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDO,EADC,4BAC0BN,EAD1B,oBADM,uBACrBG,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,sDASfM,EAAe,mCAAG,WAAMC,GAAN,yFACNT,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,kBAC+BW,EAD/B,+CADM,uBACrBR,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,qD,uJCV9B,EAvBmB,SAAC,GAAuB,IAAtBQ,EAAqB,EAArBA,gBAEjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOF,EAAP,KAAcG,EAAd,KAYA,OACI,kBAAMC,SAXS,SAAAC,GACnBA,EAAEC,iBAEFL,EAAgB,CAAED,MAAAA,GACnB,EAOK,WAEY,kBAAOO,KAAK,OAAOC,KAAMR,EAAOS,YAAY,kBAAkBC,UAAQ,EAAGC,SAPhE,SAAC,GAA2B,IAAfC,EAAc,EAAxBC,OAAUD,MACtCT,EAASS,EACV,KAMiB,mBAAQL,KAAK,SAAb,sBAGnB,ECaD,EA9Be,WAEX,OAA4BL,EAAAA,EAAAA,UAAS,MAArC,eAAOvB,EAAP,KAAemC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBf,EAArB,KAmBA,OAjBAgB,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAeF,EAAaG,IAAI,SACtC,GAAKD,EAAL,CAEA,IAAME,EAAiB,mCAAG,8GAEKrB,EAAAA,EAAAA,IAAgBmB,GAFrB,OAEhBG,EAFgB,OAGtBP,EAAUO,GAHY,gDAKtBC,QAAQC,IAAR,MALsB,yDAAH,qDAQvBH,GAVyB,CAW1B,GAAE,CAACJ,KAKF,4BACE,SAAC,EAAD,CAAYf,gBAAiBA,IAC5BtB,EAAO6C,OAAS,IAAK,SAACC,EAAA,EAAD,CAAW9C,OAAQA,MAGlD,C","sources":["components/MovieList.jsx","helpers/api.jsx","components/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\nconst MovieList = ({movies}) => {\n    \n    return(\n        <main>\n             <ul >\n        {movies.map((movie) => {return(\n          <div key={movie.id}>\n            <Link to={`/movies/${movie.id}`}>\n          <li > \n            <img src={'https://image.tmdb.org/t/p/w500/' + movie.poster_path} alt={movie.title}/>\n            <p>{movie.title}</p>\n        </li>\n          </Link>\n          \n          </div>\n          \n        )})}    \n        </ul>\n\n\n        </main>\n       \n        \n    )\n}\n\nexport default MovieList;","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '9000566cda5073c05dca2ec073eeeb0d';\n\nexport const fetchTrendingNow = async () => {\n    const {data} = await axios.get(`${BASE_URL}/trending/movie/week?api_key=${API_KEY}`);\n    return data.results;\n};\n\n\nexport const getMovieById = async movieId => {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n  \n    return data;\n  };\n\n\n  export const getCastMovie = async movieId => {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n  \n    return data.cast;\n  };\n  export const getReviewsMovie = async movieId => {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n  \n    return data.results;\n  };\n\n\n  export const getMovieByQuery = async query => {\n    const { data } = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n    );\n  \n    return data.results;\n  };","import { useState } from 'react';\n\nconst SearchForm = ({setSearchParams}) => {\n\n    const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setSearchParams({ query });\n  };\n\n  const handleSearchParams = ({ target: { value } }) => {\n    setQuery(value);\n  };\n\n    return(\n        <form onSubmit={handleSubmit}>\n                \n                    <input type=\"text\" name={query} placeholder=\"type movie name\" required   onChange={handleSearchParams}/>\n                    <button type=\"button\">Search</button>\n            </form>\n    )\n}\n\nexport default SearchForm;","import { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { getMovieByQuery } from \"helpers/api\";\nimport MovieList from 'components/MovieList';\nimport SearchForm from \"components/SearchForm\";\n\nconst Movies = () => {\n\n    const [movies, setMovies] = useState(null);\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    useEffect(() => {\n        const currentQuery = searchParams.get('query');\n        if (!currentQuery) return;\n        \n        const fetchMovieByQuery = async () => {\n          try {\n            const movieByQuery = await getMovieByQuery(currentQuery);\n            setMovies(movieByQuery);\n          } catch (e) {\n            console.log(e);\n          }\n        }\n        fetchMovieByQuery();\n      }, [searchParams]);\n\n  \n\n    return(\n        <div>\n          <SearchForm setSearchParams={setSearchParams}/>\n          {movies.length > 0 && <MovieList movies={movies} />}\n        </div>\n    )\n}\n\nexport default Movies;"],"names":["movies","map","movie","to","id","src","poster_path","alt","title","BASE_URL","API_KEY","fetchTrendingNow","axios","data","results","getMovieById","movieId","getCastMovie","cast","getReviewsMovie","getMovieByQuery","query","setSearchParams","useState","setQuery","onSubmit","e","preventDefault","type","name","placeholder","required","onChange","value","target","setMovies","useSearchParams","searchParams","useEffect","currentQuery","get","fetchMovieByQuery","movieByQuery","console","log","length","MovieList"],"sourceRoot":""}