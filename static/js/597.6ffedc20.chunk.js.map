{"version":3,"file":"static/js/597.6ffedc20.chunk.js","mappings":"yNAoDA,UAhDa,WAET,OAAwBA,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,QAuBP,OApBAE,EAAAA,EAAAA,YAAU,WACN,GAAKF,EAAL,CAEF,IAAMG,EAAc,mCAAG,oGAEnBN,GAAa,GAFM,UAGKO,EAAAA,EAAAA,IAAaJ,GAHlB,OAGbK,EAHa,OAKnBV,EAAQU,GALW,gDAOnBN,EAAS,KAAMO,SAPI,yBASnBT,GAAa,GATM,4EAAH,qDAapBM,GAfsB,CAgBvB,GAAE,CAACH,KAIA,2BACe,OAATN,IAAiB,wBAAKA,EAAKa,KAAI,YAA0C,IAAxCC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,UAAWC,EAAQ,EAARA,GAClE,OACI,4BACG,gBAAKC,IAAK,mCAAqCJ,EAAcK,IAAKJ,KACrE,wBAAKA,KACL,wBAAKC,MAHKC,EAOjB,MAEAf,IAAa,uCACbE,IAAS,uBAAIA,MAIrB,C,+LChDKgB,EAAW,gCACXC,EAAU,mCAEHC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,wCAAqDC,IAD9C,uBACrBG,EADqB,EACrBA,KADqB,kBAErBA,EAAKC,SAFgB,2CAAH,qDAMhBC,EAAY,mCAAG,WAAMpB,GAAN,yFACDiB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDd,EADC,oBACkBe,EADlB,oBADC,uBAChBG,EADgB,EAChBA,KADgB,kBAIjBA,GAJiB,2CAAH,sDAQVd,EAAY,mCAAG,WAAMJ,GAAN,yFACHiB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDd,EADC,4BAC0Be,EAD1B,oBADG,uBAClBG,EADkB,EAClBA,KADkB,kBAKnBA,EAAKxB,MALc,2CAAH,sDAOZ2B,EAAe,mCAAG,WAAMrB,GAAN,yFACNiB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDd,EADC,4BAC0Be,EAD1B,oBADM,uBACrBG,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,sDASfG,EAAe,mCAAG,WAAMC,GAAN,yFACNN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,kBAC+BQ,EAD/B,+CADM,uBACrBL,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,qD","sources":["components/Cast.jsx","helpers/api.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getCastMovie } from \"helpers/api\";\n\nconst Cast = () => {\n\n    const [cast, setCast] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const {movieId} = useParams();\n\n\n    useEffect(() => {\n        if (!movieId) return;\n  \n      const fetchMovieCast = async () => {\n        try {\n          setIsLoading(true);\n          const movieCast = await getCastMovie(movieId);\n  \n          setCast(movieCast);\n        } catch (error) {\n          setError(error.message);\n        } finally {\n          setIsLoading(false);\n        }\n      };\n  \n      fetchMovieCast();\n    }, [movieId])\n\n\n    return(\n        <div>\n             {cast !== null && <ul>{cast.map(({profile_path, name, character, id}) => {\n            return(\n                <div key={id}>\n                   <img src={'https://image.tmdb.org/t/p/w500/' + profile_path} alt={name}/>\n                <h3>{name}</h3>\n                <h3>{character}</h3> \n                </div>\n                \n            )\n        })}</ul>}\n\n        {isLoading && <div>Loading..</div>}\n        {error && <p>{error}</p>}\n        </div>\n       \n    )\n}\n\nexport default Cast;","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '9000566cda5073c05dca2ec073eeeb0d';\n\nexport const fetchTrendingNow = async () => {\n    const {data} = await axios.get(`${BASE_URL}/trending/movie/week?api_key=${API_KEY}`);\n    return data.results;\n};\n\n\nexport const getMovieById = async movieId => {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n  \n    return data;\n  };\n\n\n  export const getCastMovie = async movieId => {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n  \n    return data.cast;\n  };\n  export const getReviewsMovie = async movieId => {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n  \n    return data.results;\n  };\n\n\n  export const getMovieByQuery = async query => {\n    const { data } = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n    );\n  \n    return data.results;\n  };"],"names":["useState","cast","setCast","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","fetchMovieCast","getCastMovie","movieCast","message","map","profile_path","name","character","id","src","alt","BASE_URL","API_KEY","fetchTrendingNow","axios","data","results","getMovieById","getReviewsMovie","getMovieByQuery","query"],"sourceRoot":""}