{"version":3,"file":"static/js/135.13d5ac9b.chunk.js","mappings":"+SAEMA,EAAW,gCACXC,EAAU,mCAEHC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,wCAAqDC,IAD9C,uBACrBG,EADqB,EACrBA,KADqB,kBAErBA,EAAKC,SAFgB,2CAAH,qDAMhBC,EAAY,mCAAG,WAAMC,GAAN,yFACDJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDO,EADC,oBACkBN,EADlB,oBADC,uBAChBG,EADgB,EAChBA,KADgB,kBAIjBA,GAJiB,2CAAH,sDAQVI,EAAY,mCAAG,WAAMD,GAAN,yFACHJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDO,EADC,4BAC0BN,EAD1B,oBADG,uBAClBG,EADkB,EAClBA,KADkB,kBAKnBA,EAAKK,MALc,2CAAH,sDAOZC,EAAe,mCAAG,WAAMH,GAAN,yFACNJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDO,EADC,4BAC0BN,EAD1B,oBADM,uBACrBG,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,sDASfM,EAAe,mCAAG,WAAMC,GAAN,yFACNT,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,kBAC+BW,EAD/B,+CADM,uBACrBR,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,qD,8IClC9B,EAAoC,wCAApC,EAA2F,mCAA3F,EAAwI,8B,SC4FxI,EAtFqB,WAAO,IAAD,MAEfE,GAAYM,EAAAA,EAAAA,MAAZN,QACFO,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAEpD,GAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAyBF,OApBEC,EAAAA,EAAAA,YAAU,WACR,GAAKpB,EAAL,CAEA,IAAMqB,EAAiB,mCAAG,oGAEtBJ,GAAa,GAFS,UAGElB,EAAAA,EAAAA,IAAaC,GAHf,OAGhBsB,EAHgB,OAKtBP,EAAWO,GALW,gDAOtBH,EAAS,KAAMI,SAPO,yBAStBN,GAAa,GATS,4EAAH,qDAavBI,GAfoB,CAgBrB,GAAE,CAACrB,KAIJ,6BACG,SAAC,KAAD,CAAMwB,GAAIf,EAAagB,QAAvB,qBACa,OAAZX,IACC,gBAAKY,UAAWC,EAAhB,UACC,iBAAKD,UAAWC,EAAhB,WACE,0BACA,gBAAKC,IAAK,mCAAqCd,EAAQe,YAAaC,IAAKhB,EAAQiB,WAEjF,4BACI,wBAAKjB,EAAQiB,SAEb,yCAAiBC,KAAKC,MAAMnB,EAAQoB,kBAEpC,4BACE,sCACF,uBAAIpB,EAAQqB,eAGlB,4BACQ,oCACA,iCAAIrB,EAAQsB,cAAZ,aAAI,EAAgBC,KAAI,SAAAC,GAAK,OACjC,wBAAoBA,EAAMC,MAAjBD,EAAME,GADkB,kBAWvC,yBACE,iBAAKd,UAAWC,EAAhB,WACE,SAAC,KAAD,CAAMH,GAAG,OAAT,mBAGA,SAAC,KAAD,CAAMA,GAAG,UAAT,0BAMHR,IAAa,uCACbE,IAAS,uBAAIA,KAEd,SAAC,EAAAuB,SAAD,CAAUC,UAAU,gDAApB,UACA,SAAC,KAAD,QAIP,C","sources":["helpers/api.jsx","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '9000566cda5073c05dca2ec073eeeb0d';\n\nexport const fetchTrendingNow = async () => {\n    const {data} = await axios.get(`${BASE_URL}/trending/movie/week?api_key=${API_KEY}`);\n    return data.results;\n};\n\n\nexport const getMovieById = async movieId => {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n  \n    return data;\n  };\n\n\n  export const getCastMovie = async movieId => {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n  \n    return data.cast;\n  };\n  export const getReviewsMovie = async movieId => {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n  \n    return data.results;\n  };\n\n\n  export const getMovieByQuery = async query => {\n    const { data } = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n    );\n  \n    return data.results;\n  };","// extracted by mini-css-extract-plugin\nexport default {\"details-container\":\"MovieDetails_details-container__6VKMD\",\"details-card\":\"MovieDetails_details-card__Nl7Df\",\"details\":\"MovieDetails_details__TGlfg\"};","import React from \"react\";\nimport { useEffect, useState, Suspense, useRef } from \"react\";\nimport {getMovieById} from \"helpers/api\";\nimport { useParams, Link, Outlet, useLocation } from \"react-router-dom\";\nimport style from 'pages/MovieDetails/MovieDetails.module.css';\n\n\nconst MovieDetails = () => {\n\n    const { movieId } = useParams();\n    const location = useLocation();\n    const backLinkHref = useRef(location.state?.from ?? '/');\n\n    const [details, setDetails] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    \n    \n \n\n    useEffect(() => {\n      if (!movieId) return;\n  \n      const fetchMovieDetails = async () => {\n        try {\n          setIsLoading(true);\n          const movieData = await getMovieById(movieId);\n  \n          setDetails(movieData);\n        } catch (error) {\n          setError(error.message);\n        } finally {\n          setIsLoading(false);\n        }\n      };\n  \n      fetchMovieDetails();\n    }, [movieId]);\n\n    \n  return(\n    <main>\n       <Link to={backLinkHref.current}>Go Back</Link>\n      { details !== null &&\n         <div className={style['details-container']}>\n          <div className={style['details-card']}> \n            <div>\n            <img src={'https://image.tmdb.org/t/p/w500/' + details.poster_path} alt={details.title}/>\n            </div>\n            <div>\n                <h1>{details.title}</h1>\n\n                <h3>User Score: {Math.round(details.vote_average)}</h3> \n\n                <div>\n                  <h2>Overview</h2>\n                <p>{details.overview}</p>\n                </div>\n\n          <div>\n                  <h2>Genres</h2>\n                  <p>{details.genres?.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}</p>\n                </div>\n                \n            </div>\n          </div>\n            \n                \n        </div>}\n\n        <ul>\n          <nav className={style['details']}>\n            <Link to='cast'>\n            Cast\n            </Link>\n            <Link to='reviews'>\n              Reviews\n            </Link>\n          </nav>\n        </ul>\n\n        {isLoading && <div>Loading..</div>}\n        {error && <p>{error}</p>}\n\n        <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  )\n}\n\nexport default MovieDetails;"],"names":["BASE_URL","API_KEY","fetchTrendingNow","axios","data","results","getMovieById","movieId","getCastMovie","cast","getReviewsMovie","getMovieByQuery","query","useParams","location","useLocation","backLinkHref","useRef","state","from","useState","details","setDetails","isLoading","setIsLoading","error","setError","useEffect","fetchMovieDetails","movieData","message","to","current","className","style","src","poster_path","alt","title","Math","round","vote_average","overview","genres","map","genre","name","id","Suspense","fallback"],"sourceRoot":""}