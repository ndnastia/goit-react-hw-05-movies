{"version":3,"file":"static/js/415.eb8d0ac2.chunk.js","mappings":"2JA2BA,IA1BkB,SAAC,GAAc,IAAbA,EAAY,EAAZA,OAEhB,OACI,2BACK,wBACJA,EAAOC,KAAI,SAACC,GAAW,OACtB,0BACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,UACF,2BACE,gBAAKC,IAAK,mCAAqCH,EAAMI,YAAaC,IAAKL,EAAMM,SAC7E,uBAAIN,EAAMM,cAJFN,EAAME,GAUhB,OAQT,C,+LCvBKK,EAAW,gCACXC,EAAU,mCAEHC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,wCAAqDC,IAD9C,uBACrBG,EADqB,EACrBA,KADqB,kBAErBA,EAAKC,SAFgB,2CAAH,qDAMhBC,EAAY,mCAAG,WAAMC,GAAN,yFACDJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDO,EADC,oBACkBN,EADlB,oBADC,uBAChBG,EADgB,EAChBA,KADgB,kBAIjBA,GAJiB,2CAAH,sDAQVI,EAAY,mCAAG,WAAMD,GAAN,yFACHJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDO,EADC,4BAC0BN,EAD1B,oBADG,uBAClBG,EADkB,EAClBA,KADkB,kBAKnBA,EAAKK,MALc,2CAAH,sDAOZC,EAAe,mCAAG,WAAMH,GAAN,yFACNJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDO,EADC,4BAC0BN,EAD1B,oBADM,uBACrBG,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,sDASfM,EAAe,mCAAG,WAAMC,GAAN,yFACNT,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,kBAC+BW,EAD/B,+CADM,uBACrBR,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,qD,yGCa9B,UA3Ca,WAET,OAA4BQ,EAAAA,EAAAA,UAAS,MAArC,eAAOtB,EAAP,KAAeuB,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,MAIAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAmB,mCAAE,oGAErBJ,GAAa,GAFQ,UAIAd,EAAAA,EAAAA,MAJA,OAIfX,EAJe,OAKrBuB,EAAUvB,GALW,gDAQrB2B,EAAS,KAAMG,SARM,yBAUrBL,GAAa,GAVQ,4EAAF,qDAcvBI,GAEL,GAAE,IAEH,IAAME,EAAaC,MAAMC,QAAQjC,IAAWA,EAAOkC,OACnD,OACI,6BACK,wBACJH,IAAc,SAAC,IAAD,CAAW/B,OAAQA,MAGjCwB,IAAa,uCACbE,IAAS,uBAAIA,MAMrB,C","sources":["components/MovieList.jsx","helpers/api.jsx","pages/Home.jsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\nconst MovieList = ({movies}) => {\n    \n    return(\n        <main>\n             <ul >\n        {movies.map((movie) => {return(\n          <div key={movie.id}>\n            <Link to={`/movies/${movie.id}`}>\n          <li > \n            <img src={'https://image.tmdb.org/t/p/w500/' + movie.poster_path} alt={movie.title}/>\n            <p>{movie.title}</p>\n        </li>\n          </Link>\n          \n          </div>\n          \n        )})}    \n        </ul>\n\n\n        </main>\n       \n        \n    )\n}\n\nexport default MovieList;","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '9000566cda5073c05dca2ec073eeeb0d';\n\nexport const fetchTrendingNow = async () => {\n    const {data} = await axios.get(`${BASE_URL}/trending/movie/week?api_key=${API_KEY}`);\n    return data.results;\n};\n\n\nexport const getMovieById = async movieId => {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n  \n    return data;\n  };\n\n\n  export const getCastMovie = async movieId => {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n  \n    return data.cast;\n  };\n  export const getReviewsMovie = async movieId => {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n  \n    return data.results;\n  };\n\n\n  export const getMovieByQuery = async query => {\n    const { data } = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n    );\n  \n    return data.results;\n  };","import { useEffect, useState } from \"react\";\nimport {fetchTrendingNow} from \"helpers/api\";\nimport MovieList from \"components/MovieList\";\n\n\nconst Home = () => {\n\n    const [movies, setMovies] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n   \n\n    useEffect(() => {\n        const fetchTrendingMovies= async () => {\n            try {\n              setIsLoading(true);\n        \n              const movies = await fetchTrendingNow();\n              setMovies(movies);\n              \n            } catch (error) {\n              setError(error.message);\n            } finally {\n              setIsLoading(false);\n            }\n          }\n\n          fetchTrendingMovies();\n\n    }, [])\n\n    const showMovies = Array.isArray(movies) && movies.length;\n    return(\n        <main>\n             <ul >\n        {showMovies && <MovieList movies={movies} />}    \n        </ul>\n\n        {isLoading && <div>Loading..</div>}\n        {error && <p>{error}</p>}\n        </main>\n       \n        \n    )\n    \n}\n\nexport default Home;"],"names":["movies","map","movie","to","id","src","poster_path","alt","title","BASE_URL","API_KEY","fetchTrendingNow","axios","data","results","getMovieById","movieId","getCastMovie","cast","getReviewsMovie","getMovieByQuery","query","useState","setMovies","isLoading","setIsLoading","error","setError","useEffect","fetchTrendingMovies","message","showMovies","Array","isArray","length"],"sourceRoot":""}